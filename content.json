{"meta":{"title":"清度|耿紫威的个人博客","subtitle":"清度|耿紫威的个人博客","description":"清度|耿紫威的个人博客(前端技术爱好者)","author":"清度","url":"https://gengziwei.github.io","root":"/"},"pages":[{"title":"404 Not Found","date":"2020-06-23T03:33:08.299Z","updated":"2020-06-23T03:33:08.299Z","comments":true,"path":"404.html","permalink":"https://gengziwei.github.io/404","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"关于","date":"2020-06-24T07:53:00.774Z","updated":"2020-06-24T07:53:00.774Z","comments":true,"path":"about/index.html","permalink":"https://gengziwei.github.io/about/","excerpt":"","text":""},{"title":"所有分类","date":"2020-06-23T03:36:01.630Z","updated":"2020-06-23T03:36:01.630Z","comments":true,"path":"categories/index.html","permalink":"https://gengziwei.github.io/categories/","excerpt":"","text":""},{"title":"","date":"2020-06-24T06:46:50.165Z","updated":"2020-06-24T06:46:50.165Z","comments":true,"path":"mylist/index.html","permalink":"https://gengziwei.github.io/mylist/","excerpt":"","text":""},{"title":"所有标签","date":"2020-06-23T04:17:06.379Z","updated":"2020-06-23T04:17:06.379Z","comments":true,"path":"tags/index.html","permalink":"https://gengziwei.github.io/tags/","excerpt":"","text":""},{"title":"音乐播放","date":"2020-06-25T09:49:18.442Z","updated":"2020-06-25T09:49:18.442Z","comments":true,"path":"music/index.html","permalink":"https://gengziwei.github.io/music/","excerpt":"","text":""}],"posts":[{"title":"不知道的vue小技巧","slug":"不知道的vue小技巧","date":"2020-06-24T06:28:33.000Z","updated":"2020-06-26T11:41:40.637Z","comments":true,"path":"2020/06/24/不知道的vue小技巧/","link":"","permalink":"https://gengziwei.github.io/2020/06/24/%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84vue%E5%B0%8F%E6%8A%80%E5%B7%A7/","excerpt":"在平常敲代码过程中，我们总是想更快的处理好我们的代码逻辑实现对业务，但是却写出来了大量的不好维护代码，那是因为你没有使用到好的小技巧~","text":"在平常敲代码过程中，我们总是想更快的处理好我们的代码逻辑实现对业务，但是却写出来了大量的不好维护代码，那是因为你没有使用到好的小技巧~ 1.使用.sync修饰符 2.3.0+ 新增 在官方文档中介绍.sync为自定义事件的一种使用方式，可以对prop进行“双向绑定”. 原来的做法 12345父级组件&lt;span :title&#x3D;&quot;title&quot; @updata:title&#x3D;&quot;value &#x3D;&gt; title &#x3D; value&quot; &#x2F;&gt;#子级组件this.$emit(&#39;update:title&#39;, newTitle) 大家都知道vue进行对父级的直接修改会进行报错(修改是对象的值不算), 官方推荐使用的是$emit的方式来进行推送事件在父级进行修改数据，但是向上面的做法就会产生代码冗余数据也不好追踪并不能准确的知道在合适更新的数据，然后官方给出了一种定修饰符。 .sync的做法 12345# 父级组件&lt;span :title.sync&#x3D;&quot;title&quot; &#x2F;&gt;#子级组件this.$emit(&#39;update:title&#39;, newTitle) 可以看到父级还是之前一样进行传递 prop 值无任何的操作就可以直接完成对父级数据的修改不需要父级重新赋值, .sync 的固定格式为updata:属性名。 注意： sync 传递值须传递一个变量执行，不然无法工作。 sync 传递值不可以跟表达式进行一起使用。 $attrs 和 $listeners 2.4.0 新增 $attrs 获取包含了父作用域中不作为 prop 的值（不包括class和style） $listeners 获取包含了父作用域中事件监听器（不包括.native修饰符） 两个都是进行获取父级的传递的值，大家基本上都会对使用的ui组件进行二次封装来尽可能符合自己的业务，但是遇到那种传递 默认的prop的值跟不同展示不同的prop的时候或者不明确需要啥值的时候 这两个方法就派上用场了（在也不用一个个传递参数了） 123456789101112131415161718192021#父组件&lt;childrenDialg :title&#x3D;&quot;自定义title&quot; :width&#x3D;&quot;40%&quot; :dialogVisible&#x3D;&quot;dialogVisible &#x2F;&gt;# 子组件&lt;el-dialog v-bind&#x3D;&quot;$attrs&quot; :title&#x3D;&quot;title&quot; :visible.sync&#x3D;&quot;dialogVisible&quot; :before-close&#x3D;&quot;handleClose&quot;&gt; &lt;span&gt;这是一段信息&lt;&#x2F;span&gt; &lt;span slot&#x3D;&quot;footer&quot; class&#x3D;&quot;dialog-footer&quot;&gt; &lt;el-button @click&#x3D;&quot;dialogVisible &#x3D; false&quot;&gt;取 消&lt;&#x2F;el-button&gt; &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;dialogVisible &#x3D; false&quot;&gt;确 定&lt;&#x2F;el-button&gt; &lt;&#x2F;span&gt;&lt;&#x2F;el-dialog&gt; 持续更新中","categories":[{"name":"vue","slug":"vue","permalink":"https://gengziwei.github.io/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"https://gengziwei.github.io/tags/vue/"},{"name":"js","slug":"js","permalink":"https://gengziwei.github.io/tags/js/"}]},{"title":"Hello","slug":"hello-world","date":"2020-06-19T07:21:09.108Z","updated":"2020-06-23T06:00:13.910Z","comments":true,"path":"2020/06/19/hello-world/","link":"","permalink":"https://gengziwei.github.io/2020/06/19/hello-world/","excerpt":"这是我的第一篇文章,美好生活从这里开始。","text":"这是我的第一篇文章,美好生活从这里开始。","categories":[],"tags":[{"name":"hello","slug":"hello","permalink":"https://gengziwei.github.io/tags/hello/"}]}],"categories":[{"name":"vue","slug":"vue","permalink":"https://gengziwei.github.io/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"https://gengziwei.github.io/tags/vue/"},{"name":"js","slug":"js","permalink":"https://gengziwei.github.io/tags/js/"},{"name":"hello","slug":"hello","permalink":"https://gengziwei.github.io/tags/hello/"}]}